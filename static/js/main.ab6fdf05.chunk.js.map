{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","hooks/useFetch.ts","assets/error.svg","components/ErrorModal.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelectingTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","onQueryChange","query","onFilterChange","filter","value","onChange","ev","target","placeholder","e","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","useFetch","callback","useState","isLoading","setIsLoading","dataCollection","setData","error","setError","useEffect","fetchData","a","response","StyledDiv","styled","div","ErrorModal","src","errorImage","alt","height","TodoModal","selectedTodo","onModalClose","userId","user","setUser","message","href","name","App","setQuery","activeFilter","setActiveFilter","setSelectedTodo","filteredByActiveFilter","useMemo","filteredByQuery","toUpperCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab6fdf05.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[]\n  onSelectingTodo: (value: Todo) => void\n}\n\nexport const TodoList: React.FC<Props> = ({ todos, onSelectingTodo }: Props) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr key={todo.id} data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed ? 'has-text-success' : 'has-text-danger'}>{todo.title}</p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelectingTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Filter } from '../../types/Filter';\n\n/* eslint-disable jsx-a11y/control-has-associated-label */\ninterface Props {\n  onQueryChange: (value: string) => void\n  onFilterChange: (value: Filter) => void\n  query: string\n  filter: string\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  onQueryChange, query, onFilterChange, filter,\n}: Props) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={(ev) => onFilterChange(ev.target.value as Filter)}\n        >\n          <option>All</option>\n          <option>Active</option>\n          <option>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(e) => onQueryChange(e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"clearSearchButton\"\n            onClick={() => onQueryChange('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useEffect, useState } from 'react';\n\nexport const useFetch = <T>(callback:() => Promise<T>) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [dataCollection, setData] = useState<T | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await callback();\n\n        setData(response);\n      } catch (err) {\n        setError(err as Error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    setIsLoading(true);\n    fetchData();\n  }, []);\n\n  return { isLoading, dataCollection, error };\n};\n","export default __webpack_public_path__ + \"static/media/error.2b5b6d14.svg\";","import styled from 'styled-components';\nimport errorImage from '../assets/error.svg';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  left: 0;\n  top: 0;\n  background-color: white;\n  z-index: 100;\n`;\n\ntype Props = {\n  error: string;\n};\n\nexport const ErrorModal = ({ error }: Props) => {\n  return (\n    <StyledDiv>\n      <img src={errorImage} alt=\"Error\" style={{ height: '200px' }} />\n\n      <h1 className=\"title\">Whooops!</h1>\n\n      <strong>Something went wrong!</strong>\n\n      <small>\n        {error}\n      </small>\n    </StyledDiv>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { useFetch } from '../../hooks/useFetch';\nimport { ErrorModal } from '../ErrorModal';\n\ninterface Props {\n  selectedTodo: Todo\n  onModalClose: (value: null) => void\n}\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, onModalClose }: Props) => {\n  const { dataCollection, isLoading, error } = useFetch<User>(async () => getUser(selectedTodo.userId));\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setUser(dataCollection);\n  }, [dataCollection]);\n\n  if (error) {\n    return (\n      <ErrorModal error={error.message} />\n    );\n  }\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {user && (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  Todo #\n                  {selectedTodo.id}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={() => {\n                    onModalClose(null); setUser(null);\n                  }}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {selectedTodo.title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  <strong\n                    className={(selectedTodo.completed) ? 'has-text-success' : 'has-text-danger'}\n                  >\n                    {(selectedTodo.completed) ? 'Doned' : 'Planned'}\n                  </strong>\n\n                  {' by '}\n\n                  <a href=\"mailto:Sincere@april.biz\">\n                    {user?.name}\n                  </a>\n                </p>\n              </div>\n            </div>\n          )}\n        </>\n\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { useFetch } from './hooks/useFetch';\nimport { ErrorModal } from './components/ErrorModal';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState<string>('');\n  const [activeFilter, setActiveFilter] = useState<Filter>('All');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const { dataCollection, isLoading, error } = useFetch<Todo[]>(getTodos);\n\n  const filteredByActiveFilter = useMemo(() => {\n    if (dataCollection) {\n      switch (activeFilter) {\n        case 'Completed':\n          return dataCollection?.filter(todo => todo.completed);\n        case 'Active':\n          return dataCollection?.filter(todo => !todo.completed);\n        case 'All':\n        default:\n          return dataCollection;\n      }\n    } else {\n      return [];\n    }\n  }, [activeFilter, dataCollection]);\n\n  const filteredByQuery = useMemo(() => {\n    return filteredByActiveFilter.filter(todo => todo.title.toUpperCase().includes(query.toUpperCase()));\n  }, [query, filteredByActiveFilter]);\n\n  if (error) {\n    return (\n      <ErrorModal error={error.message} />\n    );\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onQueryChange={setQuery}\n                onFilterChange={setActiveFilter}\n                query={query}\n                filter={activeFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredByQuery}\n                  onSelectingTodo={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal selectedTodo={selectedTodo} onModalClose={setSelectedTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}