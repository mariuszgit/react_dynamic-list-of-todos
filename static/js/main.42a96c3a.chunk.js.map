{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelectingTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","onQueryChange","query","onFilterChange","filter","value","onChange","ev","target","placeholder","e","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","selectedTodo","onModalClose","useState","isLoading","setIsLoading","user","setUser","useEffect","loadUsers","a","userId","data","finally","href","name","App","setTodos","setQuery","activeFilter","setActiveFilter","setSelectedTodo","loadTodos","filteredTodosByActiveFilter","filterTodosByActiveFilter","visibleTodos","toUpperCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42a96c3a.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[]\n  onSelectingTodo: (value: Todo) => void\n}\n\nexport const TodoList: React.FC<Props> = ({ todos, onSelectingTodo }: Props) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr key={todo.id} data-cy=\"todo\" className=\"\">\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed ? 'has-text-success' : 'has-text-danger'}>{todo.title}</p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelectingTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\ninterface Props {\n  onQueryChange: (value: string) => void\n  onFilterChange: (value: string) => void\n  query: string\n  filter: string\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  onQueryChange, query, onFilterChange, filter,\n}: Props) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={(ev) => onFilterChange(ev.target.value)}\n        >\n          <option>All</option>\n          <option>Active</option>\n          <option>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(e) => onQueryChange(e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"clearSearchButton\"\n            onClick={() => onQueryChange('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  selectedTodo: Todo\n  onModalClose: (value: null) => void\n}\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, onModalClose }: Props) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const loadUsers = async () => {\n      if (selectedTodo) {\n        setIsLoading(true);\n        getUser(selectedTodo.userId)\n          .then(data => setUser(data))\n          .finally(() => setIsLoading(false));\n      }\n    };\n\n    loadUsers();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onModalClose(null); setUser(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong\n                className={(selectedTodo.completed) ? 'has-text-success' : 'has-text-danger'}\n              >\n                {(selectedTodo.completed) ? 'Doned' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                Leanne Graham\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState<string>('');\n  const [activeFilter, setActiveFilter] = useState<string>('All');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      setIsLoading(true);\n      getTodos()\n        .then(setTodos)\n        .finally(() => setIsLoading(false));\n    };\n\n    loadTodos();\n  }, []);\n\n  const filterTodosByActiveFilter = (filter: string) => {\n    switch (filter) {\n      case 'Completed':\n        return todos.filter(todo => todo.completed);\n      case 'Active':\n        return todos.filter(todo => !todo.completed);\n      case 'All':\n      default:\n        return todos;\n    }\n  };\n\n  const filterTodosByQuery = (todoList: Todo[]) => {\n    return todoList.filter(todo => todo.title.toUpperCase().includes(query.toUpperCase()));\n  };\n\n  const filteredTodosByActiveFilter = filterTodosByActiveFilter(activeFilter);\n  const visibleTodos = filterTodosByQuery(filteredTodosByActiveFilter);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onQueryChange={setQuery}\n                onFilterChange={setActiveFilter}\n                query={query}\n                filter={activeFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                todos={visibleTodos}\n                onSelectingTodo={setSelectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal selectedTodo={selectedTodo} onModalClose={setSelectedTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}